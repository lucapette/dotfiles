#!/bin/bash

set -e

die() {
  echo $@
  exit 1
}

usage() {
cat << EOF
  usage: $0 options [delete]
  -r [remote] Show remote merged branches. Active by default. remote defaults
  to origin if not specified.
  -i Ignored branches regex for remotes.
  -l Show local merged. Current branch and main are ignored.
  -h Show this message.
EOF
}

git rev-parse 2> /dev/null || die "It looks like you're not in a git repo."

branch_type='remote'

while getopts "hr:li:" opt
do
  case $opt in
    i)
      exclude_pattern=$OPTARG
      ;;
    l)
      branch_type='local'
      ;;
    r)
      branch_type='remote'
      remote_name=$OPTARG
      ;;
    h)
      usage
      exit
      ;;
    \?)
      echo "Invalid option: -$OPTARG"
      exit 1
      ;;
  esac
done

: ${remote_name:="origin"}
: ${exclude_pattern:="main"}

shift $((OPTIND-1))

delete=$1

if [ $branch_type == "local" ]; then
  branches=$(git branch --merged | grep -Ev "^\*|main")
  echo $branches
  if [ "$delete" == "delete" ]; then
    echo $branches | xargs git branch -d
  fi
else
  branches=$(git branch -r --merged | grep $remote_name | grep -Ev $exclude_pattern | sed "s/$remote_name\///")
  echo $branches
  if [ "$delete" == "delete" ]; then
    echo $branches | xargs git push $remote_name --delete
  fi
fi
